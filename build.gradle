// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:0.7.+"
    }
}

subprojects {
    repositories {
        mavenCentral()
//https://plus.google.com/109385828142935151413/posts/hF7W59uZ7rX
//        mavenLocal()
        maven {
            url "${System.env.HOME}/.m2/repository"
        }
    }
}

project.ext {
    supportPackageVersion = "19.0.0"
    playServicesVersion = "4.0.30"
    daggerVersion = "1.1.0"
    butterknifeVersion = "4.0.1"
    androidAnnotationsVersion = '3.0.0';
    nineOldAndroidsVersion = "2.4.0"
    commonsLangVersion = "2.6"
    commonsIoVersion = "2.4"
    guavaVersion = "16.0-rc1"
    jppVersion = '1.6.2';
    googleApiClientVersion = "1.17.0-rc"
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

// initialize local.properties

def writeLocalProperties() {
    def localPropFile = file("local.properties")

    if (! localPropFile.exists()) {
        [
            System.getenv("ANDROID_HOME"),
            System.getenv("ANDROID_SDK"),
            "/usr/local/opt/android-sdk",
            "/Applications/Android Studio/sdk"
        ].each { dir ->
            if (dir != null && file(dir).exists()) {
                localPropFile.write("sdk.dir=${dir}\n")
                logger.info("create ${localPropFile} with sdk.dir=${dir}")
                return;
            }
        }
    }
}

writeLocalProperties();

// set dummy properties
["GoogleApiKey_Release", "GoogleApiKey_Debug"].each { name ->
    if (! project.ext.has(name)) {
        logger.log(LogLevel.WARN, "${name} does not exist. Please set it in gradle.properties.")
        project.ext.set(name, "DUMMY")
    }
}
